// Serverside map config file, if you want to use a diffrent map change these variables
--Disable offset bullshit
MAP_NOCANCERMODE = true

DISABLED_SCPS = {
	"1048A",
	"1048B",
	"082",
	"178",
	"1048",
	"106",
	"160",
	"173",
	"1471"
}
local POINT_RAISE = Vector(0, 0, 30)
local POINT_LOWER = Vector(0, 0, -30)
local POINT_LOWER2 = Vector(0, 0, -60)
--Might as well since we use this like 83687457865346785432678923576852367 times
local V = Vector
--Spawn for Nuke
SPAWN_NUKE = Vector(3052.337891, -1736.916260, 63.307484)
--Spawn for Memorial
SPAWN_GRAVE = Vector(7981.702148, 485.235138, 485.470703)
--Spawn for WW
SPAWN_WW = V(8225.101563, 3915.517090, -640.176758)+POINT_LOWER
--Spawn for 1048
SPAWN_1048 = V(7612.908203, 3154.840576, -1224.055542)+POINT_LOWER
--Spawn for 079
HB_SCP079 = V(7808.703125, 4029.534668, -1222.812744)
SPAWN_079 = V(7810.489258, 4304.533691, -1216.759644)
--Spawn for 173
--SPAWN_173 = V(8304.566406, 3956.305420, -639.968750)
--Spawn for 106
SPAWN_106 = V(7587.666992, 3299.634033, -1287.968750)
SPAWN_1048B = SPAWN_106
--Spawn for 049
SPAWN_049 = V(3548.918701, 5318.329590, -1279.968750)
SPAWN_681 = V(4493.828613, 5000.260254, -1279.968750)
--Spawn for 457
SPAWN_457 = V(3369.802979, 3243.581299, -1279.968750)
--Spawn for 966
--SPAWN_966 = Vector(4420.794922, 2361.706787, 30.290451)
--Spawn for 939
SPAWN_939 = V(3350.994385, 4032.614746, -1279.968750)
--Spawn for 682
SPAWN_682 = V(5699.531250, 1257.288330, -1550.070801)
--Spawn for 096, currently used by 096
SPAWN_096 = V(4750.087402, 3940.536621, -1279.968750)
--Spawn for 035, if possible near D Class
SPAWN_035 = V(4947.567871, 5114.598633, -1279.968750)
SPAWN_2845 = V(5776.178223, 5849.437012, -1279.968750)
--Spawn for 1048A, although on the default map he's near able, try finding a different spawn
--SPAWN_1048A = Vector(4111.129395, -1318.857544, -99.968750)
--Spawn for 066, aka the mistake scp
--SPAWN_066 = Vector()
SPAWN_066 = V(6890.833008, 5685.887207, -1251.968750)
SPAWN_966 = V(7176.020020, 5698.344238, -1251.968750)
--Spawn for 076-02
SPAWN_0762 = V(5898.391113, 2780.189209, -1279.968750)
--082
--SPAWN_082 = Vector(4161.350098, 2399.275391, 31.752102)
--966 using 096, comment this out if they're not going to spawn in the same spot
--SPAWN_966 = Vector(4376.0595703125, 2356.5512695313, 0.03125)
--178's spawn
--SPAWN_178_1 = Vector(3987.1311035156, -1298.2137451172, -127.96875)
--SPAWN_178 = SPAWN_178_1
--I WONDER WHAT THE FUCK THIS IS FOR
SPAWN_INTERCOM = V(1001.752747, 1849.357300, 36.441872)
--914's entrance booth
SPAWN_SCP1048B = SPAWN_106
ENTER914 = V(9484.699219, 5698.691406, -1278.968750)
--914's output
EXIR914 = V(9483.615234, 5263.726563, -1261.320679)
--Where the bell would spawn, if it were ever added
POS_513 = Vector(0,0,0)
--This is the trigger, the thing that starts the machine
POS_914BUTTON = V(9406.000000, 5504.000000, -1235.000000)
--This is the mode selector
POS_914B_BUTTON = V(9405.000000, 5504.000000, -1218.000000)
--This is where the vending machine should spawn
SPAWN_SCP_294 = V(1144.038818, 1994.237549, 0.446949)
SPAWN_SCP_294_ANG = Angle(0, -90, 0)
SPAWN_SCP1025 = V(6314.047852, 949.452881, -149.986359)
local A = Angle
SPAWN_SCP1025_ANGLE = Angle(0, 0, 0)
SPAWN_372 = V(8324.110352, 1377.070313, -191.968750)
SPAWN_330 = V(8121.370605, -454.441589, -149.968750)
SPAWN_1162 = V(6368.031250, -849.848083, -52.967178)
SPAWN_038 = Vector(4782.094238, 2761.132324, -130.977257)+POINT_LOWER2
--This is where the surface music starts, this is going to be updated soon, but maybe not
OUTSIDESOUNDS = V(-421.938446, 358.105804, 224.031250)
SPAWN_458 = V(8165.053711, -2515.593994, -124.376251)
--A table containing all the D Class spawns
SPAWNS_348 = {
	V(8001.158203, 5116.841797, -1243.718750),
	V(3013.788818, 2697.905762, 0.031250)
}
--Spawn for SCP-1425
SPAWN_SCP1425 = Vector(7996.532227, 5185.784668, -1179.718750)
SPAWN_SCP1425_ANGLE = Angle(0, 0, 0)

--Spawn for SCP-216
SPAWN_SCP216 = Vector(8277.526367, -3375.005615, -127.033737)+POINT_LOWER2
SPAWN_SCP216_ANGLE = Angle(0, 178.886246, 0.000000)
SPAWN_SCP216HB = Vector(8277.526367, -3375.005615, -127.033737)+POINT_LOWER2

--Spawn for SCP-127
SPAWN_SCP127 = {
Vector(8269.182617, -1779.141479, -31.718750)+POINT_RAISE
}

--Spawn for SCP-512
SPAWN_SCP512 = {
 Vector(3354.613525, 4236.109375, -1215.968750)+POINT_RAISE
}

--Spawn for SCP-668
SPAWN_SCP668 = {
 Vector(5059.670410, 1807.608887, -127.968750)+POINT_RAISE
}

--Spawn for SCP-268
SPAWN_SCP268 = {
 Vector(7614.222168, 3857.183594, -31.053871)+POINT_RAISE
}

--Spawn for SCP-2953
SPAWN_SCP2953 = {
 Vector(4916.996582, 2261.906006, -73.018692)+POINT_RAISE
}

--Spawn for SCP-154
SPAWN_SCP154 = {
 Vector(8351.895508, -1809.907349, -128.962845)+POINT_RAISE
}

--Spawn for SCP-1290
SPAWN_SCP1290 = {
 Vector(7094.753906, 4279.932617, -1256.961182)+POINT_RAISE
}

--Spawn for SCP-005
SPAWN_SCP005 = {
 Vector(7263.930664, 591.835876, -1144.226074)+POINT_LOWER2
}

--Spawn for SCP-020
SPAWN_SCP020 = {
 Vector(5681.552734, 2626.509033, -127.957298),
 Vector(8399.968750, 175.968750, 544.584045),
 Vector(7120.031250, -2655.968750, -94.569214),
 Vector(6272.031250, -2096.031250, -128.968719),
 Vector(4720.031250, -1903.968750, -128.889877),
 Vector(6608.681152, -560.031250, -128.270782),
 Vector(6911.351563, 577.794373, -1214.968872),
 Vector(7034.020020, 5863.519531, -1216.393555),
 Vector(4972.896484, 950.024780, -1439.966797),
 Vector(1487.968750, 1970.295654, 64.730858),
 Vector(4768.363770, -842.603760, -63.013546),
 Vector(-614.390808, 710.020935, 297.883270)
}

--Spawn for SCP-1315
SPAWN_SCP1315 = Vector(9267.949219, -1790.416748, -91.000046)+POINT_LOWER2
SPAWN_SCP1315_ANGLE = Angle(3, 90, 0)
--Spawn for SCP-1315HB
SPAWN_SCP1315HB = Vector(9267.949219, -1790.416748, -91.000046)+POINT_LOWER2
SPAWN_SCP1315_ANGLEHB = Angle(3, 90, 0)
--IMPORTANT: Remember to allow 'e' on doors
SPAWN_CLASSD = {
	V(9738.370117, 3369.293945, -191.960220),
	V(9971.616211, 3349.633545, -191.968750),
	V(10188.936523, 3355.598389, -191.968750),
	V(10426.026367, 3356.683350, -191.968750),
	V(10652.875977, 3358.884521, -191.968750),
	V(10604.066406, 2790.328369, -191.968750),
	V(10383.767578, 2796.993408, -191.968750),
	V(10168.351563, 2776.995361, -191.968750),
	V(9927.696289, 2780.111084, -191.572464),
	V(9713.561523, 2800.784424, -191.968750),
	V(10651.828125, 2990.427246, -191.968750),
	V(10659.845703, 3129.327637, -191.968750),
	V(10515.136719, 3141.553955, -191.968750),
	V(10501.144531, 2997.737793, -191.968750),
	V(10361.142578, 2999.354980, -191.968750),
	V(10364.729492, 3148.304932, -191.968750),
	V(10228.662109, 3137.287109, -191.968750),
	V(10217.925781, 3002.219971, -191.968750),
	V(10049.455078, 3018.328369, -191.968750),
	V(10055.954102, 3171.061768, -191.968750),
	V(9858.033203, 3124.824463, -191.968750),
	V(9837.059570, 3002.466797, -191.968750),
	V(9668.206055, 3008.348145, -191.968750),
	V(9658.559570, 3152.062988, -191.968750),
	V(9738.370117, 3369.293945, -191.960220),
	V(9971.616211, 3349.633545, -191.968750),
	V(10188.936523, 3355.598389, -191.968750),
	V(10426.026367, 3356.683350, -191.968750),
	V(10652.875977, 3358.884521, -191.968750),
	V(10604.066406, 2790.328369, -191.968750),
	V(10383.767578, 2796.993408, -191.968750),
	V(10168.351563, 2776.995361, -191.968750),
	V(9927.696289, 2780.111084, -191.572464),
	V(9713.561523, 2800.784424, -191.968750),
	V(10651.828125, 2990.427246, -191.968750),
	V(10659.845703, 3129.327637, -191.968750),
	V(10515.136719, 3141.553955, -191.968750),
	V(10501.144531, 2997.737793, -191.968750),
	V(10361.142578, 2999.354980, -191.968750),
	V(10364.729492, 3148.304932, -191.968750),
	V(10228.662109, 3137.287109, -191.968750),
	V(10217.925781, 3002.219971, -191.968750),
	V(10049.455078, 3018.328369, -191.968750),
	V(10055.954102, 3171.061768, -191.968750),
	V(9858.033203, 3124.824463, -191.968750),
	V(9837.059570, 3002.466797, -191.968750),
	V(9668.206055, 3008.348145, -191.968750),
	V(9658.559570, 3152.062988, -191.968750),
	V(9738.370117, 3369.293945, -191.960220),
	V(9971.616211, 3349.633545, -191.968750),
	V(10188.936523, 3355.598389, -191.968750),
	V(10426.026367, 3356.683350, -191.968750),
	V(10652.875977, 3358.884521, -191.968750),
	V(10604.066406, 2790.328369, -191.968750),
	V(10383.767578, 2796.993408, -191.968750),
	V(10168.351563, 2776.995361, -191.968750),
	V(9927.696289, 2780.111084, -191.572464),
	V(9713.561523, 2800.784424, -191.968750),
	V(10651.828125, 2990.427246, -191.968750),
	V(10659.845703, 3129.327637, -191.968750),
	V(10515.136719, 3141.553955, -191.968750),
	V(10501.144531, 2997.737793, -191.968750),
	V(10361.142578, 2999.354980, -191.968750),
	V(10364.729492, 3148.304932, -191.968750),
	V(10228.662109, 3137.287109, -191.968750),
	V(10217.925781, 3002.219971, -191.968750),
	V(10049.455078, 3018.328369, -191.968750),
	V(10055.954102, 3171.061768, -191.968750),
	V(9858.033203, 3124.824463, -191.968750),
	V(9837.059570, 3002.466797, -191.968750),
	V(9668.206055, 3008.348145, -191.968750),
	V(9658.559570, 3152.062988, -191.968750)
}
--Alt guard spawns, used for some special rounds where
--the gaurds shouldn't be stuffed in a room
SPAWN_GUARD_HALLWAY = {
	Vector(722.74365234375, 629.61242675781, 0.03125),
Vector(577.08471679688, 694.38397216797, 0.03125),
Vector(668.53039550781, 838.44262695313, 0.03125),
Vector(579.515625, 981.83972167969, 0.03125),
Vector(710.29400634766, 1134.4058837891, 0.03125),
Vector(592.97674560547, 1288.1058349609, 0.03125),
Vector(647.19421386719, 1463.9477539063, 0.03125),
Vector(846.40057373047, 1452.2106933594, 0.03125),
Vector(993.53997802734, 1348.9399414063, 0.03125),
Vector(1372.1798095703, 1484.9045410156, 0.03125),
Vector(1559.4997558594, 1334.1533203125, 0.03125),
Vector(1753.5565185547, 1451.9566650391, 0.03125),
Vector(1918.1802978516, 1336.3400878906, 0.03125),
Vector(2081.6350097656, 1500.9962158203, 0.03125),
Vector(2226.6713867188, 1403.6030273438, 0.03125),
Vector(2197.7824707031, 1056.6657714844, 0.03125),
Vector(699.56219482422, 349.34954833984, -63.96875),
Vector(663.818359375, 252.64801025391, -63.96875),
Vector(652.37847900391, -198.42538452148, 0.03125),
Vector(646.49957275391, -438.35336303711, 0.03125),
Vector(641.64947509766, -636.29333496094, 0.03125),
Vector(829.0576171875, -785.78381347656, 0.03125),
Vector(1114.2926025391, -768.97021484375, 0.03125),
Vector(1382.8558349609, -780.79339599609, 0.03125),
Vector(1596.3189697266, -766.64984130859, 0.03125),
Vector(1825.7386474609, -769.85980224609, 0.03125),
Vector(2053.7512207031, -797.27600097656, 0.03125),
Vector(2178.9240722656, -695.55938720703, 0.03125),
Vector(2211.67578125, -465.57739257813, 0.03125),
Vector(2203.7084960938, -324.82760620117, 0.03125),
Vector(722.74365234375, 629.61242675781, 0.03125),
Vector(577.08471679688, 694.38397216797, 0.03125),
Vector(668.53039550781, 838.44262695313, 0.03125),
Vector(579.515625, 981.83972167969, 0.03125),
Vector(710.29400634766, 1134.4058837891, 0.03125),
Vector(592.97674560547, 1288.1058349609, 0.03125),
Vector(647.19421386719, 1463.9477539063, 0.03125),
Vector(846.40057373047, 1452.2106933594, 0.03125),
Vector(993.53997802734, 1348.9399414063, 0.03125),
Vector(1372.1798095703, 1484.9045410156, 0.03125),
Vector(1559.4997558594, 1334.1533203125, 0.03125),
Vector(1753.5565185547, 1451.9566650391, 0.03125),
Vector(1918.1802978516, 1336.3400878906, 0.03125),
Vector(2081.6350097656, 1500.9962158203, 0.03125),
Vector(2226.6713867188, 1403.6030273438, 0.03125),
Vector(2197.7824707031, 1056.6657714844, 0.03125),
Vector(699.56219482422, 349.34954833984, -63.96875),
Vector(663.818359375, 252.64801025391, -63.96875),
Vector(652.37847900391, -198.42538452148, 0.03125),
Vector(646.49957275391, -438.35336303711, 0.03125),
Vector(641.64947509766, -636.29333496094, 0.03125),
Vector(829.0576171875, -785.78381347656, 0.03125),
Vector(1114.2926025391, -768.97021484375, 0.03125),
Vector(1382.8558349609, -780.79339599609, 0.03125),
Vector(1596.3189697266, -766.64984130859, 0.03125),
Vector(1825.7386474609, -769.85980224609, 0.03125),
Vector(2053.7512207031, -797.27600097656, 0.03125),
Vector(2178.9240722656, -695.55938720703, 0.03125),
Vector(2211.67578125, -465.57739257813, 0.03125),
Vector(2203.7084960938, -324.82760620117, 0.03125),
Vector(722.74365234375, 629.61242675781, 0.03125),
Vector(577.08471679688, 694.38397216797, 0.03125),
Vector(668.53039550781, 838.44262695313, 0.03125),
Vector(579.515625, 981.83972167969, 0.03125),
Vector(710.29400634766, 1134.4058837891, 0.03125),
Vector(592.97674560547, 1288.1058349609, 0.03125),
Vector(647.19421386719, 1463.9477539063, 0.03125),
Vector(846.40057373047, 1452.2106933594, 0.03125),
Vector(993.53997802734, 1348.9399414063, 0.03125),
Vector(1372.1798095703, 1484.9045410156, 0.03125),
Vector(1559.4997558594, 1334.1533203125, 0.03125),
Vector(1753.5565185547, 1451.9566650391, 0.03125),
Vector(1918.1802978516, 1336.3400878906, 0.03125),
Vector(2081.6350097656, 1500.9962158203, 0.03125),
Vector(2226.6713867188, 1403.6030273438, 0.03125),
Vector(2197.7824707031, 1056.6657714844, 0.03125),
Vector(699.56219482422, 349.34954833984, -63.96875),
Vector(663.818359375, 252.64801025391, -63.96875),
Vector(652.37847900391, -198.42538452148, 0.03125),
Vector(646.49957275391, -438.35336303711, 0.03125),
Vector(641.64947509766, -636.29333496094, 0.03125),
Vector(829.0576171875, -785.78381347656, 0.03125),
Vector(1114.2926025391, -768.97021484375, 0.03125),
Vector(1382.8558349609, -780.79339599609, 0.03125),
Vector(1596.3189697266, -766.64984130859, 0.03125),
Vector(1825.7386474609, -769.85980224609, 0.03125),
Vector(2053.7512207031, -797.27600097656, 0.03125),
Vector(2178.9240722656, -695.55938720703, 0.03125),
Vector(2211.67578125, -465.57739257813, 0.03125),
Vector(2203.7084960938, -324.82760620117, 0.03125),
}
--Medbay spawns for guards
SPAWN_GUARD = {
	Vector(768.44165039063, -1024.029296875, 0.03125),
Vector(794.42071533203, -1121.3410644531, 0.03125),
Vector(782.85162353516, -1216.6456298828, 0.03125),
Vector(802.06799316406, -1301.7919921875, 0.03125),
Vector(877.92108154297, -1317.9615478516, 0.03125),
Vector(907.13000488281, -1234.6276855469, 0.03125),
Vector(918.81036376953, -1148.4145507813, 0.03125),
Vector(1018.9702148438, -1083.9663085938, 0.03125),
Vector(1032.5324707031, -1015.8075561523, 0.03125),
Vector(1097.8548583984, -1141.6589355469, 0.03125),
Vector(1095.0051269531, -1223.5883789063, 0.03125),
Vector(1124.8100585938, -1313.2258300781, 0.03125),
Vector(1195.4130859375, -1355.6003417969, 0.03125),
Vector(1216.7611083984, -1270.8084716797, 0.03125),
Vector(1212.0209960938, -1183.2922363281, 0.03125),
Vector(1214.3077392578, -1095.8492431641, 0.03125),
Vector(1582.5876464844, -1210.1798095703, 0.03125),
Vector(1604.5582275391, -1279.2425537109, 0.03125),
Vector(1689.8634033203, -1282.2093505859, 0.03125),
Vector(1763.6551513672, -1318.6656494141, 0.03125),
Vector(1810.0533447266, -1305.8402099609, 0.03125),
Vector(1759.9916992188, -1212.6247558594, 0.03125),
Vector(1717.8029785156, -1128.2628173828, 0.03125),
Vector(1656.3247070313, -1082.7447509766, 0.03125),
Vector(1601.6279296875, -1044.5734863281, 0.03125),
Vector(1641.3310546875, -973.49816894531, 0.03125),
Vector(1746.3853759766, -973.79052734375, 0.03125),
Vector(1833.4450683594, -979.00299072266, 0.03125),
Vector(1892.9556884766, -986.64996337891, 0.03125),
Vector(1914.7302246094, -1055.4787597656, 0.03125),
Vector(1989.8643798828, -1076.2377929688, 0.03125),
Vector(2018.2834472656, -1025.4178466797, 0.03125),
Vector(2072.2629394531, -1004.6672973633, 0.03125),
Vector(2088.6774902344, -1069.38671875, 0.03125),
Vector(2077.6975097656, -1155.6915283203, 0.03125),
Vector(2064.46484375, -1256.8291015625, 0.03125),
Vector(2109.3015136719, -1312.7640380859, 0.03125),
Vector(2196.1450195313, -1312.8176269531, 0.03125),
Vector(2218.8884277344, -1213.9064941406, 0.03125),
Vector(2218.3344726563, -1111.7664794922, 0.03125),
Vector(2230.8015136719, -1001.4515991211, 0.03125),
Vector(768.44165039063, -1024.029296875, 0.03125),
Vector(794.42071533203, -1121.3410644531, 0.03125),
Vector(782.85162353516, -1216.6456298828, 0.03125),
Vector(802.06799316406, -1301.7919921875, 0.03125),
Vector(877.92108154297, -1317.9615478516, 0.03125),
Vector(907.13000488281, -1234.6276855469, 0.03125),
Vector(918.81036376953, -1148.4145507813, 0.03125),
Vector(1018.9702148438, -1083.9663085938, 0.03125),
Vector(1032.5324707031, -1015.8075561523, 0.03125),
Vector(1097.8548583984, -1141.6589355469, 0.03125),
Vector(1095.0051269531, -1223.5883789063, 0.03125),
Vector(1124.8100585938, -1313.2258300781, 0.03125),
Vector(1195.4130859375, -1355.6003417969, 0.03125),
Vector(1216.7611083984, -1270.8084716797, 0.03125),
Vector(1212.0209960938, -1183.2922363281, 0.03125),
Vector(1214.3077392578, -1095.8492431641, 0.03125),
Vector(1582.5876464844, -1210.1798095703, 0.03125),
Vector(1604.5582275391, -1279.2425537109, 0.03125),
Vector(1689.8634033203, -1282.2093505859, 0.03125),
Vector(1763.6551513672, -1318.6656494141, 0.03125),
Vector(1810.0533447266, -1305.8402099609, 0.03125),
Vector(1759.9916992188, -1212.6247558594, 0.03125),
Vector(1717.8029785156, -1128.2628173828, 0.03125),
Vector(1656.3247070313, -1082.7447509766, 0.03125),
Vector(1601.6279296875, -1044.5734863281, 0.03125),
Vector(1641.3310546875, -973.49816894531, 0.03125),
Vector(1746.3853759766, -973.79052734375, 0.03125),
Vector(1833.4450683594, -979.00299072266, 0.03125),
Vector(1892.9556884766, -986.64996337891, 0.03125),
Vector(1914.7302246094, -1055.4787597656, 0.03125),
Vector(1989.8643798828, -1076.2377929688, 0.03125),
Vector(2018.2834472656, -1025.4178466797, 0.03125),
Vector(2072.2629394531, -1004.6672973633, 0.03125),
Vector(2088.6774902344, -1069.38671875, 0.03125),
Vector(2077.6975097656, -1155.6915283203, 0.03125),
Vector(2064.46484375, -1256.8291015625, 0.03125),
Vector(2109.3015136719, -1312.7640380859, 0.03125),
Vector(2196.1450195313, -1312.8176269531, 0.03125),
Vector(2218.8884277344, -1213.9064941406, 0.03125),
Vector(2218.3344726563, -1111.7664794922, 0.03125),
Vector(2230.8015136719, -1001.4515991211, 0.03125)
}

SPAWN_CLASSE = {
	Vector(6157.645020, 3903.698486, -1256.933472)+POINT_LOWER,
	Vector(6575.576172, 3909.253906, -1256.913086)+POINT_LOWER,
	Vector(7079.887695, 3906.404297, -1255.177246)+POINT_LOWER,
	Vector(7368.358398, 4087.272461, -1256.857910)+POINT_LOWER,
	Vector(7231.323242, 4291.758789, -1255.741455)+POINT_LOWER,
	Vector(6443.542969, 4125.534668, -1376.880737)+POINT_LOWER,
	Vector(6338.971680, 4653.229980, -1375.382935)+POINT_LOWER
}
--Nine tailed fox spawns
--SPAWN_OUTSIDE = {
--	Vector(579.63977050781, 7103.6142578125, 1537.4864501953),
--	Vector(568.88232421875, 7025.8452148438, 1537.03125),
--	Vector(577.2490234375, 6944.6201171875, 1537.1876220703),
--	Vector(567.37609863281, 6868.9775390625, 1537.03125),
--	Vector(523.37628173828, 6720.5170898438, 1689.03125),
--	Vector(442.57070922852, 6711.2465820313, 1689.03125),
--	Vector(364.69982910156, 6714.5688476563, 1689.03125),
--	Vector(261.11761474609, 6719.2880859375, 1689.03125),
--	Vector(149.99046325684, 6725.8676757813, 1689.03125),
--	Vector(-12.66552734375, 6729.7016601563, 1689.03125),
--}

SPAWN_OUTSIDE = {
	Vector(-1829.8516845703, 2202.2900390625, 240.03125),
Vector(-1654.26953125, 2186.2646484375, 240.03125),
Vector(-1489.6624755859, 2141.0378417969, 240.03125),
Vector(-1502.4279785156, 1964.8732910156, 240.03125),
Vector(-1666.1968994141, 1947.4895019531, 240.03125),
Vector(-1847.732421875, 1930.0366210938, 240.03125),
Vector(-1839.66796875, 1746.7720947266, 240.03125),
Vector(-1676.3137207031, 1688.6251220703, 240.03125),
Vector(-1500.6071777344, 1702.8543701172, 240.03125),
Vector(-1486.6273193359, 1533.84375, 240.03125),
Vector(-1678.259765625, 1532.1394042969, 240.03125),
Vector(-1848.7078857422, 1515.9611816406, 240.03125)
}
SPAWN_OUTSIDE_RAND = {
	{
	Vector(-1829.8516845703, 2202.2900390625, 240.03125),
Vector(-1654.26953125, 2186.2646484375, 240.03125),
Vector(-1489.6624755859, 2141.0378417969, 240.03125),
Vector(-1502.4279785156, 1964.8732910156, 240.03125),
Vector(-1666.1968994141, 1947.4895019531, 240.03125),
Vector(-1847.732421875, 1930.0366210938, 240.03125),
Vector(-1839.66796875, 1746.7720947266, 240.03125),
Vector(-1676.3137207031, 1688.6251220703, 240.03125),
Vector(-1500.6071777344, 1702.8543701172, 240.03125),
Vector(-1486.6273193359, 1533.84375, 240.03125),
Vector(-1678.259765625, 1532.1394042969, 240.03125),
Vector(-1848.7078857422, 1515.9611816406, 240.03125)
	},
	{
		Vector(-1404.8226318359, -7851.0244140625, -207.96875),
Vector(-1273.7940673828, -7849.875, -207.96875),
Vector(-1129.0466308594, -7848.6083984375, -207.96875),
Vector(-1129.4034423828, -7711.6674804688, -207.96875),
Vector(-1249.9312744141, -7698.8354492188, -207.96875),
Vector(-1405.0886230469, -7700.154296875, -207.96875),
Vector(-1417.1385498047, -7553.51953125, -207.96875),
Vector(-1282.2408447266, -7545.0048828125, -207.96875),
Vector(-1146.4287109375, -7543.8002929688, -207.96875),
Vector(-1144.1129150391, -7366.7333984375, -207.96875),
Vector(-1292.7473144531, -7352.2329101563, -207.96875),
Vector(-1453.2935791016, -7353.6127929688, -207.96875),
Vector(-1406.974609375, -7191.5444335938, -207.96875),
Vector(-1248.8861083984, -7180.7202148438, -207.96875),
Vector(-1118.0681152344, -7179.5258789063, -207.96875),
Vector(-1212.5559082031, -7002.2490234375, -207.96875),
Vector(-1366.4356689453, -6997.9526367188, -207.96875),
Vector(-1427.1306152344, -6818.5551757813, -207.96875),
Vector(-1281.2575683594, -6816.3911132813, -207.96875),
Vector(-1139.1158447266, -6815.1411132813, -207.96875),
Vector(-1124.7420654297, -6655.9711914063, -207.96875),
Vector(-1259.8598632813, -6641.4692382813, -207.96875),
Vector(-1402.3582763672, -6642.5795898438, -207.96875)
	},
	{
		Vector(-2535.7585449219, -2838.4489746094, -207.96875),
Vector(-2647.2277832031, -2739.7353515625, -207.96875),
Vector(-2804.5944824219, -2721.958984375, -207.96875),
Vector(-2905.2788085938, -2820.7150878906, -207.96875),
Vector(-3045.111328125, -2880.4677734375, -207.96875),
Vector(-3153.1838378906, -2826.5185546875, -207.96875),
Vector(-3145.2729492188, -2688.03125, -207.96875),
Vector(-3294.6381835938, -2739.43359375, -207.96875),
Vector(-3322.2312011719, -2884.5236816406, -207.96875),
Vector(-3339.2841796875, -3045.07421875, -207.96875),
Vector(-3282.4067382813, -2476.4768066406, -207.96875)
	}
}

--Leave this 0
LAST_RDC_TIME = 0
--Sci Spawns
SPAWN_SCIENT = {
	Vector(9846.404296875, -694.31329345703, -191.96875),
Vector(9840.1298828125, -587.24200439453, -191.96875),
Vector(9725.841796875, -558.58190917969, -191.96875),
Vector(9688.517578125, -697.75964355469, -191.96875),
Vector(9554.1962890625, -673.35540771484, -191.96875),
Vector(9565.91015625, -566.78161621094, -191.96875),
Vector(9425.1015625, -580.04571533203, -191.96875),
Vector(9393.7119140625, -711.15173339844, -191.96875),
Vector(9244.400390625, -688.63861083984, -191.96875),
Vector(9225.9189453125, -567.05078125, -191.96875),
Vector(9081.7890625, -616.03570556641, -191.96875),
Vector(8914.3505859375, -661.9638671875, -191.96875),
Vector(8771.9365234375, -582.66125488281, -191.96875),
Vector(8729.51953125, -700.53564453125, -191.96875),
Vector(8577.4609375, -609.74456787109, -191.96875),
Vector(8421.560546875, -679.88244628906, -191.96875),
Vector(8258.7021484375, -581.39770507813, -191.96875),
Vector(8111.1450195313, -665.47314453125, -191.96875),
Vector(7959.0102539063, -591.6025390625, -191.96875),
Vector(7810.2724609375, -689.49383544922, -191.96875),
Vector(7651.9116210938, -568.59741210938, -191.96875),
Vector(7454.3012695313, -667.87591552734, -191.96875),
Vector(7339.3041992188, -584.03350830078, -191.96875),
Vector(7207.1005859375, -682.48718261719, -191.96875),
Vector(8679.111328125, -953.38507080078, -191.96875),
Vector(8576.724609375, -1033.6186523438, -191.96875),
Vector(8710.8154296875, -1205.8823242188, -191.96875),
Vector(8599.255859375, -1355.5161132813, -191.96875),
Vector(8706.1015625, -1481.0439453125, -191.96875),
Vector(8601.1298828125, -1617.3184814453, -191.96875),
Vector(8683.0546875, -1793.7209472656, -191.96875),
Vector(8614.6728515625, -1949.8729248047, -191.96875),
Vector(8844.7431640625, -1596.9156494141, -191.96875),
Vector(9057.7626953125, -1613.1490478516, -191.96875),
Vector(9326.73046875, -1635.0413818359, -191.96875)
}
--Keyguard level 2 spawns
--For every 'zone' that a level two should spawn in, use a subtable
--You can have as many zones as you'd like
SPAWN_KEYCARD2 = {
	lczaround1 = {
		Vector(9815.6044921875, 3357.4396972656, -155.38920593262),
Vector(10458.3046875, 2807.3566894531, -141.3723449707),
Vector(9779.0185546875, 2822.3757324219, -141.37551879883),
Vector(10649.8515625, 3444.4714355469, -171.37007141113),
Vector(7649.9521484375, 3522.4436035156, -155.39128112793),
Vector(8690.8818359375, 1559.8399658203, -151.38059997559),
Vector(5849.2045898438, 1200.4073486328, -155.39562988281),
Vector(6433.1225585938, -2321.9157714844, -157.87023925781),
Vector(5424.0771484375, 2289.0134277344, -157.88017272949),
Vector(6038.1450195313, 211.37155151367, -143.37423706055),
Vector(8124.6650390625, -3274.1555175781, -143.52102661133)
	},
	lczaround2 = {
		Vector(5412.841796875, 2113.5029296875, -155.37155151367),
Vector(7303.9526367188, 3472.4252929688, -167.40408325195),
Vector(6897.7641601563, -2389.8967285156, -167.37078857422),
Vector(7868.8491210938, -2731.4548339844, -167.37971496582),
Vector(6508.31640625, 1213.8763427734, -163.3914642334),
Vector(5028.0483398438, 2750.3156738281, -191.36422729492),
Vector(7346.6640625, 189.47164916992, -1279.3656005859),
Vector(5993.08984375, 1676.3032226563, -167.3537902832),
Vector(8554.67578125, 2724.1057128906, -167.38719177246)
	}
}
--Keyguard level 4 spawns
--For every 'zone' that a level three should spawn in, use a subtable
--You can have as many zones as you'd like
SPAWN_KEYCARD3 = {
	lcz1 = {
		Vector(7116.8837890625, -299.07977294922, -1279.3839111328),
Vector(8360.81640625, 3959.7329101563, -703.38677978516),
Vector(8765.03125, -441.90536499023, -155.34234619141),
Vector(9172.03125, -1223.4488525391, -154.38819885254),
Vector(4926.6787109375, -1868.8692626953, -127.38293457031),
Vector(7058.1020507813, -2631.4052734375, -191.34826660156),
Vector(7577.8330078125, -678.35345458984, 480.62155151367),
Vector(6770.255859375, -132.33024597168, -191.4793548584)
	},
	hcz1 = {
		Vector(5641.6040039063, 3358.4716796875, -191.3742980957),
Vector(7584.013671875, 3414.6813964844, -1247.3967285156),
Vector(6965.24609375, 5312.263671875, -1243.1456298828),
Vector(6061.5239257813, 4615.9418945313, -1279.3551025391),
Vector(2766.3127441406, 2451.9462890625, -1339.1456298828),
Vector(6307.7358398438, -2253.26171875, -191.38110351563),
Vector(7769.3134765625, -1578.6257324219, -167.37155151367),
Vector(3869.4838867188, 4469.9833984375, -1279.3792724609)
	}
}
--Keyguard level 4 spawns
--For every 'zone' that a level four should spawn in, use a subtable
--You can have as many zones as you'd like
--Currently one keycard per zone is spawned, this will change
SPAWN_KEYCARD4 = {
	lcz1 = {
		Vector(6478.2373046875, -846.74304199219, -79.392913818359),
Vector(8857.7998046875, -2084.4145507813, 464.54403686523),
Vector(4693.625, 2603.0314941406, -55.686019897461),
Vector(6757.369140625, 713.50927734375, 224.63172912598)
	},
	hcz1 = {
		Vector(3446.318359375, 909.05865478516, -1503.3876953125),
Vector(7249.2294921875, 4187.1767578125, -1439.3771972656),
Vector(5353.724609375, 1054.5291748047, -1663.3751220703),
Vector(9555.375, 5508.2685546875, -1153.6674804688),
	},
	ez = {
		Vector(4670.3862304688, -889.56329345703, -143.37197875977),
Vector(3538.5622558594, 2818.3542480469, 0.6502702832222),
Vector(3658.1489257813, -909.35162353516, -15.361139297485)
	}
}
--A table containing keycard 5 spawns, 1 or 2 per game depending on player count
--Currently the 2 spawns are placeholders
--This is unused, but will be used soon
SPAWN_KEYCARD5 = {
	Vector(-4086.6989746094, -3414.8588867188, 16.633350372314),
Vector(-4304.9458007813, -1858.4787597656, 16.611238479614),
Vector(-3979.8349609375, -1792.2122802734, 40.630664825439)
}
--Medkits
SPAWN_MEDKITS = {
	Vector(9257.7841796875, 5206.7416992188, -1237.0495605469),
Vector(7699.197265625, 4626.0107421875, -1228.9383544922),
Vector(2957.0998535156, 1630.1805419922, -1501.1423339844),
Vector(6200.8413085938, 1010.2852783203, -153.15235900879),
Vector(8389.9619140625, 2745.609375, -153.24574279785),
Vector(7656.4975585938, 3458.2360839844, -153.23249816895),
Vector(8615.7265625, 1454.5461425781, -153.2131652832),
Vector(8748.6552734375, -436.69198608398, -153.1770324707),
Vector(6693.0483398438, -2555.9997558594, -153.23249816895),
Vector(7845.013671875, -3108.8627929688, -149.27206420898),
Vector(3369.2990722656, -1891.7045898438, 26.845149993896),
Vector(783.92462158203, 304.33279418945, -13.140940666199),
Vector(1087.4509277344, 1654.7302246094, 2.7772250175476),
Vector(5581.763671875, 2293.2277832031, -165.20793151855),
Vector(7513.5615234375, 3161.8774414063, -1249.2139892578)
}
--Places to spawn items like SNAVs and such
SPAWN_MISCITEMS = {
	Vector(7619.6767578125, 3880.9304199219, -167.60249328613),
Vector(8257.3916015625, 2893.7414550781, -151.62629699707),
Vector(6639.8466796875, 3358.9587402344, -155.61270141602),
Vector(6969.8403320313, 3662.318359375, -151.57481384277),
Vector(7314.1298828125, 3255.2229003906, -143.58735656738),
Vector(5783.0297851563, 1335.5386962891, -151.55450439453),
Vector(6314.6850585938, 949.51031494141, -151.53308105469),
Vector(7977.498046875, 528.19226074219, 480.46911621094),
Vector(8228.142578125, -3274.48046875, -143.52059936523),
Vector(5411.7368164063, 562.74627685547, -111.55020141602),
Vector(1044.9802246094, 1996.6173095703, 20.425542831421),
Vector(1066.380859375, -1389.0301513672, 48.395576477051),
Vector(3217.2673339844, -2005.3961181641, 0.45804280042648),
Vector(7172.9375, 5294.7465820313, -1279.5340576172),
Vector(7998.7075195313, 5190.740234375, -1243.3317871094),
Vector(7845.6274414063, 4037.3581542969, -1243.53515625),
Vector(6093.8559570313, 4809.8149414063, -1319.5345458984),
Vector(9248.9013671875, 5800.8759765625, -1279.5202636719),
Vector(3967.5229492188, 4627.0981445313, -1215.5148925781),
Vector(4655.5493164063, 1608.0607910156, -1503.5389404297),
Vector(4665.8955078125, 856.47741699219, -1503.5269775391),
Vector(4909.9443359375, 1999.1979980469, -191.53297424316),

}
--Night vision goggles
--Currently do to a comment I forgot to remove in the init file
--all of these are used, soon we will use a math formula to determine
--how many to spawn, as of now, just put as many as you want
SPAWN_NVG = {
	Vector(7620.0581054688, 3814.9050292969, -166.74864196777),
Vector(8478.7001953125, 2721.8098144531, -142.74742126465),
Vector(8510.1201171875, 2721.5598144531, -142.7689666748),
Vector(8481.8212890625, 1037.3009033203, -142.73559570313),
Vector(6539.8134765625, -2661.9064941406, -152.1114654541),
Vector(8002.1010742188, -1212.2243652344, -148.71780395508),
Vector(6681.5258789063, -647.55291748047, -142.71484375),
Vector(6711.8686523438, -642.49066162109, -142.77737426758),
Vector(9893.8330078125, -733.08697509766, -190.72235107422),
Vector(2434.3276367188, 2479.8608398438, 49.241119384766),
Vector(434.54495239258, -692.66180419922, 1.2792024612427),
V(9551, -258, -141),
V(9551, -1020, -165),
V(9038, -1016, -141),
V(9145, -817, -146),
V(9143, -465, -146),
V(8176, -829, -153),
V(7800, -1435, -164),
V(7019, -2638, -189),
V(7088, -2119, -93),
V(8177, -3063, -149),
V(8021, -2359, -149),
V(5054, -1905, -125),
V(4726, -1257, -189),
V(5586, -1220, -189)
}

SPAWN_BATTERY9 = {

}

SPAWN_BATTERY18 = {

}


SPAWN_BATTERY_STR = {}

--Crowbar spawns, will include other mapspawn melee weapons as they're added
SPAWN_MELEEWEPS = {
	Vector(5445.47265625, 1987.2261962891, -190.68241882324),
Vector(6993.5966796875, -2657.2155761719, -190.72343444824),
Vector(4749.9609375, -1873.5989990234, -190.74142456055),
Vector(2928.8159179688, 2884.1108398438, -1374.6756591797),
Vector(6920.5439453125, 4047.9829101563, -1438.7114257813),
Vector(7742.1538085938, 5147.9482421875, -1278.6953125),
Vector(7229.0166015625, -109.19068145752, -1278.6705322266),
Vector(2042.3718261719, 1801.7406005859, -1374.6768798828)
}
--GUN SPAWNS:
--All gun spawns are always used, ie every spawn in the table will have a gun

--That one shotgun by gate b
--More than one will be good
SPAWN_SHOTGUNS = {
}
--Riffle ammo spawns
SPAWN_AMMO_RIFLE = {
	Vector(5527.8608398438, 499.66235351563, -127.45827484131),
Vector(5543.794921875, 499.29052734375, -127.46673583984),
Vector(5558.3276367188, 499.64739990234, -127.52457427979),
Vector(5577.0114254688, 499.46673583984, -127.48766326904),
Vector(5594.4365234375, 500.03091430664, -127.58877563477),
Vector(5607.2739257813, 500.48049926758, -127.4888458252),
Vector(5638.7001953125, 501.11727905273, -127.58424377441),
Vector(5656.3530273438, 501.71481323242, -127.59344482422),
Vector(5680.9482421875, 496.60034179688, -127.52298736572),
Vector(5699.712890625, 501.60061645508, -127.44637298584),
Vector(5721.45703125, 494.55996704102, -127.44177246094),
Vector(5734.4306640625, 501.82473754883, -127.44512939453),
Vector(808.64581298828, 1669.5668945313, 72.458503723145),
Vector(810.23107910156, 1691.1461181641, 72.500335693359),
Vector(842.3017578125, 298.28509521484, -63.459587097168),
Vector(7862.427734375, -1018.4157104492, 480.4264831543),
Vector(7577.072265625, 3413.2536621094, -1247.6138916016),
Vector(7603.9013671875, 3413.248046875, -1247.4663085938),
Vector(3384.4208984375, 1615.466796875, -1503.6057128906),
Vector(3346.5715332031, 1610.4034423828, -1503.5798339844),
Vector(2759.4379882813, 2800.3146972656, -1339.3345947266)
}
--SMG ammo spawns
SPAWN_AMMO_SMG = {
Vector(8263.0693359375, -1939.19921875, -119.50901794434),
Vector(8265.509765625, -1915.2613525391, -119.56047821045),
Vector(8266.3447265625, -1893.3469238281, -119.51292419434),
Vector(8267.369140625, -1864.4274902344, -119.50466918945),
Vector(5202.1655273438, 2286.5805664063, -151.44076538086),
Vector(4984.1142578125, 958.42333984375, -1503.5673828125),
Vector(5729.3793945313, 145.08071899414, -127.61627960205),
Vector(5713.7680664063, 147.15065002441, -127.52341461182),
Vector(5696.1137695313, 148.48558044434, -127.48467254639),
Vector(5677.3422851563, 147.69496154785, -127.4997253418),
Vector(5657.88671875, 146.98849487305, -127.52597808838),
Vector(5641.1665039063, 146.29470825195, -127.50238037109),
Vector(5542.546875, 143.49307250977, -127.48695373535),
Vector(5534.322265625, 142.88710021973, -121.91287231445),
Vector(5562.6606445313, 147.12062072754, -127.60832214355),
Vector(5575.6206054688, 150.81495666504, -127.4997253418),
Vector(5588.6293945313, 151.32429504395, -127.49046325684),
Vector(5608.0874023438, 151.08503723145, -127.57557678223),
Vector(7301.7485351563, 3421.1398925781, -119.54637145996),
Vector(5590.0078125, 4720.0922851563, -1279.4764404297),
Vector(7611.0961914063, 4321.4990234375, -1184.5823974609),
Vector(8164.8530273438, 5041.8798828125, -1231.3559570313)
}
--Pistol ammo
SPAWN_AMMO_PISTOL = {
Vector(8752.1396484375, -2112.2980957031, -155.57774353027),
Vector(7604.3959960938, -819.14953613281, -149.60261535645),
Vector(8336.216796875, 1041.4123535156, -95.592247009277),
Vector(6825.2856445313, 3597.5986328125, -155.63301086426),
Vector(7601.7158203125, 101.66291809082, 473.8059387207),
Vector(8270.673828125, -1721.8204345703, -119.25131225586),
Vector(8267.6396484375, -1703.4439697266, -119.25131225586),
Vector(8265.2919921875, -1669.5168457031, -119.28831481934),
Vector(8262.04296875, -1647.71875, -119.30704498291),
Vector(7359.4516601563, 568.17303466797, -1208.6485595703),
Vector(7377.578125, 603.42071533203, -1211.6540527344),
Vector(3864.4128417969, 2228.3439941406, -1503.5711669922),
Vector(2284.7893066406, 2026.0327148438, -1375.5904541016),
Vector(1485.8352050781, 1998.7376708984, 40.465019226074),
Vector(1469.5113525391, 2002.0588378906, 40.478851318359)
}
--Pistols
SPAWN_PISTOLS = {
Vector(8322.5673828125, -1701.1362304688, -191.60473632813),
Vector(8361.0302734375, -1702.7335205078, -191.59342956543),
Vector(8404.2255859375, -1701.9406738281, -191.60145568848),
Vector(8383.5693359375, -1708.6323242188, -191.56454467773),
Vector(8596.5048828125, 1744.7954101563, -143.5883026123),
Vector(4891.548828125, 2741.041015625, -190.9467010498),
Vector(951.78015136719, 972.84423828125, 0.38826304674149),
Vector(4892.3515625, -1849.6579589844, -127.58975219727),
Vector(9005.220703125, -262.10000610352, -167.59666442871)
}
--SMGs
SPAWN_SMGS = {
	Vector(5688.4604492188, 306.45068359375, -126.69909667969),
Vector(5686.966796875, 262.36087036133, -126.77693939209),
Vector(5645.712890625, 254.04858398438, -126.52589416504),
Vector(5646.4428710938, 299.43908691406, -126.82460784912),
Vector(5605.8872070313, 295.52639770508, -126.6707611084),
Vector(5600.341796875, 246.23466491699, -126.54503631592),
Vector(5560.5322265625, 240.60607910156, -126.56727600098),
Vector(5558.6469726563, 289.21826171875, -126.86647033691),
Vector(8399.9189453125, -1908.2487792969, -190.70674133301),
Vector(8363.9267578125, -1903.4713134766, -190.65472412109),
Vector(8325.7470703125, -1906.3836669922, -190.52705383301),
Vector(5785.19921875, 4537.634765625, -1278.7052001953),
Vector(6267.8896484375, 2547.0771484375, -1278.7069091797),
Vector(3954.2082519531, 4455.6489257813, -1214.8275146484)
}
--Rifles, like aks
SPAWN_RIFLES = {
	Vector(6719.2075195313, 5810.5341796875, -1279.1363525391),
Vector(7516.0776367188, 3169.5756835938, -1251.1287841797),
Vector(5690.1098632813, 447.00332641602, -127.1287689209),
Vector(5695.5083007813, 412.18252563477, -127.11667633057),
Vector(5647.2329101563, 399.3567199707, -127.09230041504),
Vector(5647.6977539063, 441.80932617188, -127.11769104004),
Vector(5598.9252929688, 438.76733398438, -127.13369750977),
Vector(5599.0512695313, 388.36737060547, -127.13892364502),
Vector(5549.9931640625, 387.66064453125, -127.14252398682),
Vector(5548.1787109375, 436.81454467773, -127.05765533447),
Vector(5086.05078125, 1018.1112670898, -1503.0770263672),
Vector(2627.1740722656, 2437.3950195313, -1338.8474121094),
Vector(812.01733398438, 244.84942626953, -15.12352848053)
}

SPAWN_SNIPERS = {
	Vector(-3745.2009277344, -2063.9060058594, 51.150543212891),
Vector(-2732.240234375, -896.48229980469, 367.25094604492),
Vector(-4212.2788085938, -1866.5400390625, -208.72213745117),
}
--Unused, won't ever be used
--Kept to stop GM from complaining
SPAWN_ZOMBIES = {
}

--Would be locations for a 096 nextbot to spawn
SPAWN_096NEXT = {
}

--The direction the nextbot would point
SCP096_ANGLES = {
}


--MTF Guard vests, all spawns are used
SPAWN_ARMORS = {
	Vector(792.15997314453, 352.75299072266, -15.619304656982),
Vector(2993.4030761719, -1774.8416748047, 33.859279632568),
Vector(5388.169921875, -36.355419158936, -127.56364440918),
Vector(9818.52734375, 3374.7368164063, -155.60609436035),
Vector(4633.3442382813, 2517.9260253906, -191.5793762207)
}
--Fire proof vests, all spawns are used
SPAWN_FIREPROOFARMOR = {
	Vector(2940.3137207031, 2476.6774902344, 48.349555969238),
Vector(7045.5209960938, 5515.2426757813, -1279.6374511719),
Vector(9142.6826171875, -1792.2181396484, -149.6399230957),
Vector(8614.9423828125, 1524.2670898438, -155.57614135742)

}
--Flash nades, all spawns are used
SPAWN_FLASH = {
Vector(9515.1630859375, -263.52688598633, -141.87297058105),
Vector(8689.7939453125, -450.29614257813, -153.93363952637),
Vector(8553.1611328125, -2130.9174804688, -124.38301849365),
Vector(7842.150390625, -1206.7852783203, -141.88743591309),
Vector(9307.2197265625, -273.04501342773, -161.88987731934),
Vector(5420.662109375, 2278.3784179688, -156.3971862793),
Vector(7663.607421875, 3497.1252441406, -153.89613342285),
Vector(8270.72265625, -1831.9729003906, -141.6300201416),
Vector(8266.591796875, -1806.4698486328, -141.57095336914),
Vector(8265.4326171875, -1789.0570068359, -141.65060424805),
Vector(8265.0341796875, -1756.2065429688, -141.55000305176),
Vector(816.57391357422, 1675.0158691406, 26.17885017395),
Vector(821.92889404297, 1704.0758056641, 26.104785919189),
Vector(810.21502685547, 1720.3187255859, 26.194000244141),
Vector(885.43792724609, -1399.6099853516, 26.079113006592),
Vector(909.70971679688, -1388.9074707031, 26.231168746948),
Vector(859.30792236328, -1386.8522949219, 26.19401550293),
Vector(1075.2908935547, -1391.4641113281, 26.107452392578),
Vector(1034.3076171875, -1395.6442871094, 26.093446731567),
Vector(1005.9813232422, -1391.2517089844, 26.082160949707),
Vector(3393.6298828125, -1709.87890625, 22.214513778687),
Vector(3375.6044921875, -1707.9041748047, 22.085111618042),
Vector(3342.2438964844, -1715.6752929688, 22.129320144653),
Vector(3307.92578125, -1712.4421386719, 22.109756469727),
Vector(6527.8559570313, -2505.1706542969, -141.82550048828),
Vector(6519.1875, -2538.4990234375, -141.84596252441),
Vector(6586.9990234375, -2511.3618164063, -117.84226989746),
V(6670, -749, -141),
V(6749, -847, -140),
V(6195, 1678, -189),
V(5053, 2737, -189),
V(4663, 2721, -189)
}
--Pills, all spawns are used
SPAWN_500 = {
	Vector(6846.5947265625, -2202.0500488281, -154.85140991211),
Vector(8350.28125, -1646.0178222656, -142.57305908203),
Vector(9117.873046875, -843.52618408203, -190.62509155273),
Vector(8435.1259765625, 1274.2890625, -190.7840423584),
Vector(2307.7583007813, 1737.1080322266, -14.718029022217),
Vector(8333.0859375, -1694.2758789063, 465.25970458984),
Vector(8853.033203125, -1961.232421875, -190.73765563965),
Vector(7307.1997070313, 3305.0378417969, -190.72093200684)
}
--This was used back when chaos didn't spawn with MTF guards
--Feel free to add spawns for it, just know they probably won't ever be used
--(Use in Special round?)
SPAWN_CHAOS_S = SPAWN_GUARD_HALLWAY

--Hack to fix 914
--You can have a command call this, or stick it in your breach mapconfig using timers, delay should be around 15 seconds
function Fix914()

end


--Compatibility
ALPHA_WARHEAD_SUPPORTED_BY_MAP = false
--Var, off
ALPHA_WARHEAD_STATE = false
local NEXT_914_USE = 0
--THESE ARE MAP BUTTONS
--They are one of the most important things in this config
--Buttons should be accurate or they won't work
--This is where you set keycard requirements and door names
--Every 'door' is a subtable of BUTTONS
--You can have the following attributes on each door

--name (required) - Shown to the user when they use the door, set to an empty string to not Show
--pos (required) - The position of the button
--canactivate - A function thats called to determine if a player can use the button/ent, takes 2 arguments, the player and the ent
--usesounds - true or false value, whether or not the siren should play upon the door being used, false if not present
--clevel - The min. keycard level to use, this probably doesn't work well with canactivate
--customdenymsg - Shown to the user if it is determined they cannot use this door in canactivate (function), usually used to tell players trying to leave their spawn they can't yet during prep
--enabled - Not really sure, haven't played around with it, assuming its whether a door can be used
BUTTONS = {
	{
		name = "",
		pos = V(10642, 3256, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(10418, 3256, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(10194, 3256, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(9970.009765625, 3256, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(9746.009765625, 3256, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(9714.009765625, 2888, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(9938.009765625, 2888, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(10162, 2888, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(5154.000000, 4922.009766, -1217.880005),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(5682.009766, 5522.000000, -1217.880005),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(10386, 2888, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(10610, 2888, -128),
		canactivate = function (ply, ent)
			if ent.LastUsed and ent.LastUsed + 1 > CurTime() then return end
			ent.LastUsed = CurTime()
			ent:Fire("Open")
			return false
		end,
		customdenymsg = ""
	},
	{
		name = "SCP-173 Containment",
		pos = V(8034.5, 4068.5600585938, -646),
		canactivate = function ()
			return not preparing
		end,
		customdenymsg = "Please wait until the round begins."
	},
	{
		name = "SCP-173 Containment",
		canactivate = function ()
			return not preparing
		end,
		customdenymsg = "Please wait until the round begins.",
		pos = V(7993.5, 3794, -645.58001708984),
	},
	{
		name = "SCP-106 Containment",
		pos = V(6710.009765625, 2794, -1217.8800048828),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function ()
			return not preparing
		end
	},
	{
		name = "SCP-049 Containment",
		pos = V(3344, 5080, -1216),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "SCP-681 Containment",
		pos = V(4340, 4784, -1216),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "SCP-457 Containment",
		pos = V(3800, 3184, -1216),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "SCP-939 Containment",
		pos = V(3800, 3952, -1216),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "SCP-682 Containment",
		pos = V(5176, 1108, -1440),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "SCP-096 Containment",
		pos = V(4468, 4284, -1216),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "SCP-610 Containment",
		pos = V(5238.000000, 4937.990234, -1214.560059),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = "Please wait until the round begins.",
	},
	{
		name = "SCP-2845 Containment",
		pos = V(5713.990234375, 5542, -1211.9300537109),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function ()
			return !preparing
		end
	},
	{
		name = "SCP-076-2 Containment",
		pos = V(6038, 3038, -1225.9899902344),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			return !preparing
		end
	},
	{
		name = "SCP-372 Containment",
		pos = V(8320, 1264, -128),
		customdenymsg = "Please wait until the round begins.",
		canactivate = function (p, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end
	},
	{
		name = "914 Button",
		pos = POS_914BUTTON,
		customdenymsg = "",
		canactivate = function(pl, ent)
			if NEXT_914_USE > CurTime() then return false end
			NEXT_914_USE = CurTime() + 15
			Use914(ent)
			return false
		end
	},
	--If the map doesn't have 914
	--Move the 'return false' to before 'Use914B(pl, ent)'
	{
		name = "914 Button 2",
		pos = POS_914B_BUTTON,
		customdenymsg = "",
		canactivate = function(pl, ent)
			Use914B(pl, ent)
			return false
		end
	},
	{
		name = "Checkpoint Alpha",
		pos = V(2355, 2712.4899902344, -1323.5600585938),
		clevel = 3,
		iscpdoor = true
	},
	{
		name = "Checkpoint Alpha",
		pos = V(2301, 2560.5, -1320.9200439453),
		clevel = 3,
		iscpdoor = true
	},
	{
		name = "Checkpoint Beta",
		pos = V(7045, -22, -1228.5400390625),
		clevel = 3,
		iscpdoor = true
	},
	{
		name = "Checkpoint Beta",
		pos = V(7003, -22, -1227.4499511719),
		clevel = 3,
		iscpdoor = true
	},
	{
		name = "Checkpoint Gamma",
		pos = V(5709.490234375, 3450, -124.98999786377),
		clevel = 3,
		iscpdoor = true
	},
	{
		name = "Checkpoint Gamma",
		pos = V(5936.009765625, 3438, -125),
		clevel = 3,
		iscpdoor = true
	},
	{
		name = "SCP-914",
		pos = V(9143.5, 5392, -1216.8000488281),
		clevel = 3
	},
	{
		name = "SCP-914",
		pos = V(9181.5, 5617, -1216.8000488281),
		clevel = 3
	},
	{
		name = "SCP-038",
		pos = V(4729.000000, 2590.000000, -137.000000),
		clevel = 4
	},
	{
		name = "SCP-079",
		pos = Vector(7765.990234, 4618.000000, -1222.839966),
		clevel = 5
	},
	{
		name = "SCP-966",
		pos = V(7184.009765625, 5600, -1216),
		canactivate = function (ply, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end,
		customdenymsg = "Please wait until the round begins."
	},
	{
		name = "SCP-066",
		pos = V(6896, 5600, -1216),
		canactivate = function (ply, ent)
			if preparing then return false end
			ent:Fire("Open")
			return true
		end,
		customdenymsg = "Please wait until the round begins."
	},
	{
		name = "",
		pos = V(7123.009765625, 5550, -1225),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(6835, 5550, -1225),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(4410.009765625, 4258, -1217.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(4282.009765625, 4822, -1217.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(3894.0100097656, 4842, -1217.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(3386.0100097656, 5122, -1217.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(6050.000000, 3045.989990, -1217.880005),
		canactivate = function () return !preparing end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(3762, 3890.0100097656, -1217.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(3762, 3122.0100097656, -1217.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "",
		pos = V(5202, 1050.0100097656, -1441.8800048828),
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		pos = V(8259, 1214, -137),
		name = "",
		canactivate = function ()
			return !preparing
		end,
		customdenymsg = ""
	},
	{
		name = "Gate A",
		pos = V(-519, 482, 317.57998657227),
		clevel = 4,
		blockhns = true
	},
	{
		name = "Gate A",
		pos = V(-567, 148, 317.57998657227),
		clevel = 4,
		blockhns = true
	},
	{
		name = "MTF Insertion Point",
		pos = V(754, -922, 64.019996643066),
		canactivate = function ()
			return not preparing
		end,
		customdenymsg = "Please wait until the round begins."
	},
	{
		name = "MTF Insertion Point",
		pos = V(2326, -794, 62.950000762939),
		canactivate = function ()
			return not preparing
		end,
		customdenymsg = "Please wait until the round begins."
	},
	{
		name = "LCZ Armory",
		pos = V(8538, -1845.9899902344, -125.7200012207),
		clevel = 4
	},
	{
		name = "",
		pos = V(9013.990234375, -470, -127.43000030518),
		clevel = 3
	},
	{
		name = "",
		pos = V(4967, 2590, -137),
		clevel = 2
	},
	{
		name = "Super Important Meeting Room",
		pos = V(5898, -1365.9899902344, -123.0299987793),
		clevel = 3
	},
	{
		name = "Super Important Meeting Room",
		pos = V(5578.009765625, -1986, -131.17999267578),
		clevel = 3
	},
	{
		name = "Janitor's Closet",
		pos = V(6826, -709.98999023438, -125.61000061035),
		clevel = 2
	},
	{
		name = "Observation Rooms",
		pos = V(7718, 250, -132.30000305176),
		clevel = 2
	},
	{
		name = "Class E Pool Room",
		pos = V(5980, 4538, -1217.8800048828),
		canactivate = function(pl, ent)
			if preparing then
				return false
			else
				if ent:GetSaveTable( ).m_bLocked then --The door is locked! Unlock it!
					print("Forcing door unlock!")
					ent:Fire("unlock")
					ent:Fire("use") --Open it now so the user doesnt have to press it again :)
				end
				return true
			end
		end --You can't open the door yet.
	},
	{
		name = "SCP-1315 Game Room",
		pos = V(9013.990234, -1702.000000, -127.629997),
		clevel = 4
	},
	{
		name = "SCP-216 Containment Chamber",
		pos = V(7898.009766, -3282.000000, -125.910004),
		clevel = 2
	},
	{
		name = "Warhead Activation Chamber",
		pos = V(3242.010010, -1706.000000, 61.709999),
		clevel = 4
	}
}
--Something to do with Gate A, will check exactly
POS_GATEA = Vector(-2371.547852, -7303.381348, -7.968750)
--The center of the escort zone
POS_ESCORT = Vector(-1675.796997, 1753.885010, 304.031250)
--The button used to open 173's room
POS_173DOORS = Vector(362.000000, 1592.000000, 294.000000)
--Maybe works?
POS_106DOORS = Vector(1728.000000, 4103.000000, 46.000000)
--Doesn't work due to the way the map works
POS_049BUTTON = Vector(5040.000000, -952.000000, -474.000000)
--Same as 173DOORS
POS_173BUTTON = Vector(362.000000, 1592.000000, 294.000000)
--Used to open 096's zone
POS_096BUTTON = Vector(4993.000000, 3592.000000, 53.000000)
--This line is fine
POS_096_1BTN = POS_096BUTTON
--Not even sure what thats used for
POS_682BUTTON = Vector(2288.000000, 3396.010010, -201.139999)
--This is probably unused
POS_BTN1048A1 = Vector(4291.740234, 2367.010010, 55.498001)
--Unused?
POS_BTN1048A2 = Vector(4217.953125, 2258.280518, 35.985283)
--Was used to open 966's old spawn, map broke it
POS_BTN966 = Vector(4291.740234, 2367.010010, 55.498001)

--new one
POS_BTN966_2 = Vector(4216.000000, 2256.000000, 38.000000)
--Pocket dem locations
POS_POCKETD = {
	Vector(11557.806641, -8142.663574, -785.968750)
}

--Called when a player requests gate a
--Use an empty function for maps without gates
local function Breach_RequestGateA(ply)
	print("map: gate a requested")
	if preparing or postround then return end
	if ply:CLevelGlobal() < 4 then return end
	if !(ply:Team() == TEAM_GUARD or ply:Team() == TEAM_CHAOS or ply:Team() == TEAM_GOC) then return end
	if nextgateaopen > CurTime() then
		ply:PrintMessage(HUD_PRINTTALK, "You cannot open Gate A now, you must wait " .. math.Round(nextgateaopen - CurTime()) .. " seconds")
		return
	end
	for k,v in pairs(ents.FindByClass("func_door")) do
				if v.GetName and (v:GetName() == "gate_a" or v:GetName() == "gate_a1") then
					v:Fire("open")
				end
			end
end

hook.Add("BreachMap_RequestGateA","Breach_gmsite19_requestGateA", Breach_RequestGateA)

--Sets the RDC's state, does nothing if already in the desired state
local function Breach_SetRDCState(desired)
end
hook.Add("BreachMap_SetRDCState", "Breach_site19_desiredRDC", Breach_SetRDCState)

--This function toggles if gate a is open or not
--This is probably unused, but I ported it just in case
local function Breach_ToggleGateA()
	for k,v in pairs(ents.FindByClass("func_door")) do
				if v.GetName and (v:GetName() == "gate_a" or v:GetName() == "gate_a1") then
					v:Fire("toggle")
				end
			end
end

hook.Add("BreachMap_ToggleGateA", "Breach_site19_ToggleMainGate", Breach_ToggleGateA)

--Function used in the gamemode to close SCP doors
--Some of this is probably broken on the default map
--Potientally unused
local function Breach_CloseSCPDoors()
	print("map: close scp doors")
end
hook.Add("BreachMap_CloseSCPDoors", "Breach_site19_CloseDoors", Breach_CloseSCPDoors)

--Function used to release SCPs at the start of the round
local function Breach_OpenSCPDoors()
	print("map: open scp doors")
end
hook.Add("BreachMap_OpenSCPDoors", "Breach_site19_OpenDoors", Breach_OpenSCPDoors)


--Called right after we reset the map, this is called every round
--Called right when preparing starts, before any players / entities are spawned
--Use this if a map needs some things disabled or something
--Also can be used to clean map ents
local function Breach_PostMapCleanup()
	print("map: round init post clean")
end

hook.Add("PostCleanupMap", "BreachMap_site19_mapcleaned", Breach_PostMapCleanup)

TIMED_GATE_SUPPORTED_MAP = true

hook.Add("FOpenGateA", "BreachMap_site19_gateaopenforced", function ()
	if hideseekrespawn then return end
	for k,v in pairs(ents.FindByClass("func_door")) do
				if v.GetName and (v:GetName() == "gate_a" or v:GetName() == "gate_a1") then
					v:Fire("open")
				end
			end
end)

hook.Add("OpenGateB", "BreachMap_site19_gatebopen", function ()
end)

hook.Add("BreachStartRound", "AttributionToVale", function ()
	BroadcastGameMsg("Map originally comissioned for VaLe SCP-RP, edited for GFLClan Breach.")
end)